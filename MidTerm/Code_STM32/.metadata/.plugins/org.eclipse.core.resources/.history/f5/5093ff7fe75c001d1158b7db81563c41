/*
 * button.c
 *
 *  Created on: Nov 5, 2022
 *      Author: Vy Nguyen
 */

#include "button.h"

int button_reset_flag = 0;
int button_inc_flag = 0;
int button_dec_flag = 0;


int key_reg0 = NORMAL_STATE;
int key_reg1 = NORMAL_STATE;
int key_reg2 = NORMAL_STATE;

int timer_for_key_press = 100;
int stable_state = NORMAL_STATE;

int isButtonResetPressed(){
	if (button_reset_flag == 1){
		button_reset_flag = 0;
		return 1;
	}
	return 0;
}

int isButtonIncPressed(){
	if (button_inc_flag == 1){
		button_inc_flag = 0;
		return 1;
	}
	return 0;
}

int isButtonDecPressed(){
	if (button_dec_flag == 1){
		button_dec_flag = 0;
		return 1;
	}
	return 0;
}

void subKeyResetProcess(){
	button_reset_flag = 1;
}

void subKeyIncProcess(){
	button_inc_flag = 1;
}

void subKeyDecProcess(){
	button_dec_flag = 1;
}

void getKeyInputReset(){
	key_reg0 = key_reg1;
	key_reg1 = key_reg2;
	key_reg2 = HAL_GPIO_ReadPin(RESET_GPIO_Port, RESET_Pin);

	if ((key_reg0 == key_reg1) && (key_reg1 == key_reg2)){
		if (stable_state != key_reg2){
			stable_state = key_reg2;
			if(key_reg2 == PRESSED_STATE){
				subKeyResetProcess();
				timer_for_key_press = 100;
			}
		}

		else{
			timer_for_key_press--;
			if(timer_for_key_press == 0){
				stable_state = NORMAL_STATE;
			}
			timer_for_key_press = 100;
		}
	}
}

void getKeyInputInc(){
	key_reg0 = key_reg1;
	key_reg1 = key_reg2;
	key_reg2 = HAL_GPIO_ReadPin(INC_GPIO_Port, INC_Pin);

	if ((key_reg0 == key_reg1) && (key_reg1 == key_reg2)){
		if (stable_state != key_reg2){
			stable_state = key_reg2;
			if(key_reg2 == PRESSED_STATE){
				subKeyIncProcess();
				timer_for_key_press = 100;
			}
		}

		else{
			timer_for_key_press--;
			if(timer_for_key_press == 0){
				stable_state = PRESSED_STATE;
			}
			timer_for_key_press = 100;
		}
	}
}


void getKeyInputDec(){
	key_reg0 = key_reg1;
	key_reg1 = key_reg2;
	key_reg2 = HAL_GPIO_ReadPin(DEC_GPIO_Port, DEC_Pin);

	if ((key_reg0 == key_reg1) && (key_reg1 == key_reg2)){
		if (stable_state != key_reg2){
			stable_state = key_reg2;
			if(key_reg2 == PRESSED_STATE){
				subKeyDecProcess();
				timer_for_key_press = 100;
			}
		}

		else{
			timer_for_key_press--;
			if(timer_for_key_press == 0){
				stable_state = PRESSED_STATE;
			}
			timer_for_key_press = 100;
		}
	}
}

